{\rtf1\ansi\ansicpg1252\cocoartf2578
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red34\green34\blue34;\red163\green21\blue21;
\red0\green0\blue255;\red255\green0\blue0;\red128\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\csgenericrgb\c13333\c13333\c13333;\csgenericrgb\c63922\c8235\c8235;
\csgenericrgb\c0\c0\c100000;\csgenericrgb\c100000\c0\c0;\csgenericrgb\c50196\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww20660\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs26 \cf0 \
\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Initialisation du projet : \
npm init -y\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 npm install --save-dev @babel/core\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\expnd0\expndtw0\kerning0
\outl0\strokewidth0 npm install --save-dev @babel/cli\
npm install --save-dev @babel/prevent-env\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\
Cr\'e9er un fichier \'e0 la racine de la solution nomm\'e9 "babel.config.js" et y ajouter ceci :\
\
module.exports = \{\
    "presets": [\
        [\
            "@babel/preset-env",\
            \{\
                "targets": \{\
                    "ie": "11"\
                \}\
            \}\
        ]\
    ]\
\};\
\
\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\
Pour lancer le script : \
- Ajouter dans le fichier package.json dans \'ab\'a0scripts\'a0\'bb :\
	"compile-es6-to-es5":"babel ./source -d ./dist" \
(Tous les fichiers .js se trouvant dans le dossier source seront transpiler en code compatible ie11 dans le dossier ./dist)\
\
Utiliser la commande : "npm run compile-es6-to-es5" pour compiler le projet\
Pensez \'e0 l'ajouter dans la configuration "Prebuild" de la solution pour toujours ex\'e9cuter cette commande \
voir dans le fichier .csproj si pas de fen\'eatre "pre-build" avec : \
\cf3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 <\cf4 Target\cf5  \cf6 Name\cf5 =\cf3 "\cf5 RunBabel\cf3 "\cf5  \cf6 BeforeTargets\cf5 =\cf3 "\cf5 Build\cf3 ">\uc0\u8232 	<\cf4 Exec\cf5  \cf6 Command\cf5 =\cf3 "\cf5 npm run compile-es6-to-es5\cf3 "\cf5  \cf3 />\uc0\u8232 </\cf4 Target\cf3 >\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\
Dans le fichier .csproj :\
- premiere solution pour inclure tous les fichiers du dossier :  \cf3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 <\cf4 Content\cf5  \cf6 Include\cf5 =\cf3 "\cf5 dist\\**\cf3 "\cf5  \cf3 />\
(\'c0 voir pour une solution plus viable\'85)\
\
Condition \'e0 respect\'e9 pour un bon fonctionnement :\
- Ajouter dans chaque balise <script></script> le champ charset="utf-8" comme ici :\
\pard\pardeftab720\partightenfactor0
\cf3 	<\cf7 script\cf3  src=\cf4 "./dist/testmathias4.js"\cf3  charset=\cf4 "utf-8"\cf3 >\cf7 </script>\uc0\u8232 \cf3 	Ce qui permettra d'avoir les caract\'e8res UTF-8 autrement les accents, ect.. ne s'afficheront pas\
\pard\pardeftab720\sl320\partightenfactor0
\cf3 \uc0\u8232 }